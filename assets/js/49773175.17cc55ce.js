"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4100],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>c});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,m=r(e,["components","mdxType","originalType","parentName"]),d=p(n),c=l,h=d["".concat(s,".").concat(c)]||d[c]||u[c]||i;return n?a.createElement(h,o(o({ref:t},m),{},{components:n})):a.createElement(h,o({ref:t},m))}));function c(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,o=new Array(i);o[0]=d;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r.mdxType="string"==typeof e?e:l,o[1]=r;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},357:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>p,toc:()=>m});var a=n(7462),l=n(3366),i=(n(7294),n(3905)),o=["components"],r={id:"vim",sidebar_label:"Vim",title:"Vim"},s=void 0,p={unversionedId:"editors/vim",id:"editors/vim",title:"Vim",description:"Vim demo",source:"@site/target/docs/editors/vim.md",sourceDirName:"editors",slug:"/editors/vim",permalink:"/metals/docs/editors/vim",editUrl:"https://github.com/scalameta/metals/edit/main/docs/editors/vim.md",tags:[],version:"current",frontMatter:{id:"vim",sidebar_label:"Vim",title:"Vim"},sidebar:"docs",previous:{title:"VS Code",permalink:"/metals/docs/editors/vscode"},next:{title:"Sublime Text",permalink:"/metals/docs/editors/sublime"}},m=[{value:"Requirements",id:"requirements",children:[],level:2},{value:"Installing Vim",id:"installing-vim",children:[],level:2},{value:"Installing Node",id:"installing-node",children:[],level:2},{value:"Installing coc.nvim",id:"installing-cocnvim",children:[{value:"Recommended coc.nvim mappings",id:"recommended-cocnvim-mappings",children:[],level:3},{value:"Installing coc-metals",id:"installing-coc-metals",children:[],level:3}],level:2},{value:"Importing a build",id:"importing-a-build",children:[{value:"Custom sbt launcher",id:"custom-sbt-launcher",children:[],level:3},{value:"Speeding up import",id:"speeding-up-import",children:[],level:3},{value:"Importing changes",id:"importing-changes",children:[],level:3}],level:2},{value:"Configure Java version",id:"configure-java-version",children:[],level:2},{value:"Using latest Metals SNAPSHOT",id:"using-latest-metals-snapshot",children:[],level:2},{value:"List all workspace compile errors",id:"list-all-workspace-compile-errors",children:[],level:2},{value:"Worksheets",id:"worksheets",children:[{value:"Getting started with Worksheets",id:"getting-started-with-worksheets",children:[],level:3},{value:"Evaluations",id:"evaluations",children:[],level:3},{value:"Using dependencies in worksheets",id:"using-dependencies-in-worksheets",children:[],level:3}],level:2},{value:"Tree View Protocol",id:"tree-view-protocol",children:[{value:"Tree View Protocol configuration options",id:"tree-view-protocol-configuration-options",children:[],level:3}],level:2},{value:"Goto Super Method",id:"goto-super-method",children:[],level:2},{value:"Run doctor",id:"run-doctor",children:[],level:2},{value:"Other Available Commands",id:"other-available-commands",children:[],level:2},{value:"Show document symbols",id:"show-document-symbols",children:[],level:2},{value:"Available Configuration Options",id:"available-configuration-options",children:[{value:"Java Home directory",id:"java-home-directory",children:[],level:3},{value:"sbt script",id:"sbt-script",children:[],level:3},{value:"Gradle script",id:"gradle-script",children:[],level:3},{value:"Maven script",id:"maven-script",children:[],level:3},{value:"Mill script",id:"mill-script",children:[],level:3},{value:"Scalafmt config path",id:"scalafmt-config-path",children:[],level:3},{value:"Scalafix config path",id:"scalafix-config-path",children:[],level:3},{value:"Ammonite JVM Properties",id:"ammonite-jvm-properties",children:[],level:3},{value:"Excluded Packages",id:"excluded-packages",children:[],level:3},{value:"Don&#39;t generate Bloop plugin file for sbt",id:"dont-generate-bloop-plugin-file-for-sbt",children:[],level:3},{value:"Version of Bloop",id:"version-of-bloop",children:[],level:3},{value:"Bloop JVM Properties",id:"bloop-jvm-properties",children:[],level:3},{value:"Should display lenses with links to super methods",id:"should-display-lenses-with-links-to-super-methods",children:[],level:3},{value:"Should display type annotations for inferred types",id:"should-display-type-annotations-for-inferred-types",children:[],level:3},{value:"Should display implicit parameter at usage sites",id:"should-display-implicit-parameter-at-usage-sites",children:[],level:3},{value:"Should display implicit conversion at usage sites",id:"should-display-implicit-conversion-at-usage-sites",children:[],level:3},{value:"Should try adjust indentation on range formatting.",id:"should-try-adjust-indentation-on-range-formatting",children:[],level:3},{value:"Remote language server",id:"remote-language-server",children:[],level:3},{value:"Default fallback Scala version",id:"default-fallback-scala-version",children:[],level:3},{value:"Test UI used for tests and test suites",id:"test-ui-used-for-tests-and-test-suites",children:[],level:3},{value:"Eclipse Java formatter config path",id:"eclipse-java-formatter-config-path",children:[],level:3},{value:"Eclipse Java formatting profile",id:"eclipse-java-formatting-profile",children:[],level:3}],level:2},{value:"Create new project from template",id:"create-new-project-from-template",children:[],level:2},{value:"Enable on type formatting for multiline string formatting",id:"enable-on-type-formatting-for-multiline-string-formatting",children:[],level:2},{value:"Close buffer without exiting",id:"close-buffer-without-exiting",children:[],level:2},{value:"Shut down the language server",id:"shut-down-the-language-server",children:[],level:2},{value:"Statusline integration",id:"statusline-integration",children:[],level:2},{value:"Formatting on save",id:"formatting-on-save",children:[],level:2},{value:"Files and Directories to include in your Gitignore",id:"files-and-directories-to-include-in-your-gitignore",children:[],level:2},{value:"Using an alternative LSP Client",id:"using-an-alternative-lsp-client",children:[{value:"Generating metals binary",id:"generating-metals-binary",children:[],level:3}],level:2}],u={toc:m};function d(e){var t=e.components,n=(0,l.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/4BYHCCL.gif",alt:"Vim demo"})),(0,i.kt)("p",null,"Metals works with most LSP clients for Vim, but we recommend using one of the\nMetals-specific extensions to get the best experience since they offer\nMetals-specific commands and implement the Metals LSP extensions. "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/scalameta/coc-metals"},"coc-metals")," An extension for\n",(0,i.kt)("a",{parentName:"li",href:"https://github.com/neoclide/coc.nvim"},(0,i.kt)("inlineCode",{parentName:"a"},"coc.nvim"))," If you're already using\nother coc.nvim plugins or you are using Vim instead of Neovim, then this is\nprobably the best option for you. Most of the documentation below refers to\ncoc-metals."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/scalameta/nvim-metals"},"nvim-metals")," A Lua extension for\nthe ",(0,i.kt)("a",{parentName:"li",href:"https://neovim.io/doc/user/lsp.html"},"built-in LSP support")," in Neovim.\nNote that this requires at least the 0.5.0 release of Neovim. You can find\nthe full documentation for nvim-metals\n",(0,i.kt)("a",{parentName:"li",href:"https://github.com/scalameta/nvim-metals/blob/master/doc/metals.txt"},"here"),".")),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Java 8, 11, 17 provided by OpenJDK or Oracle"),". Eclipse OpenJ9 is not\nsupported, please make sure the ",(0,i.kt)("inlineCode",{parentName:"p"},"JAVA_HOME")," environment variable\npoints to a valid Java 8, 11 or 17 installation."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"macOS, Linux or Windows"),". Metals is developed on many operating systems and\nevery PR is tested on Ubuntu, Windows and MacOS."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Scala 2.13, 2.12, 2.11 and Scala 3"),". Metals supports these Scala versions:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Scala 2.13"),":\n2.13.8, 2.13.7, 2.13.6, 2.13.5, 2.13.4, 2.13.3, 2.13.2, 2.13.1")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Scala 2.12"),":\n2.12.15, 2.12.14, 2.12.13, 2.12.12, 2.12.11, 2.12.10, 2.12.9, 2.12.8")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Scala 2.11"),":\n2.11.12")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Scala 3"),":\n3.1.3-RC2, 3.1.2, 3.1.2-RC3, 3.1.2-RC2, 3.1.1, 3.1.0, 3.0.2, 3.0.1, 3.0.0"))),(0,i.kt)("p",null,"Note that 2.11.x support is deprecated and it will be removed in future releases.\nIt's recommended to upgrade to Scala 2.12 or Scala 2.13"),(0,i.kt)("h2",{id:"installing-vim"},"Installing Vim"),(0,i.kt)("p",null,"The coc.nvim plugin requires either ",(0,i.kt)("strong",{parentName:"p"},"Vim >= 8.1")," or ",(0,i.kt)("strong",{parentName:"p"},"Neovim >= 0.3.1"),". Make\nsure you have the correct version installed. While it works with both Vim and\nNeovim, we recommend using Neovim since it provides a smoother experience with\nsome of the features."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# If using Vim\nvim --version | head\nVIM - Vi IMproved 8.2\n\n# If using Neovim\nnvim --version | head\nNVIM v0.4.3\n")),(0,i.kt)("h2",{id:"installing-node"},"Installing Node"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"coc.nvim")," requires ",(0,i.kt)("a",{parentName:"p",href:"https://nodejs.org/en/download/"},"Node.js")," in order to work.\nIt also uses ",(0,i.kt)("a",{parentName:"p",href:"https://yarnpkg.com/en/docs/install#debian-stable"},"Yarn")," to manage\nextensions but you could opt-out of it and use ",(0,i.kt)("inlineCode",{parentName:"p"},"vim-plug")," instead."),(0,i.kt)("p",null,"For convenience we recommend installing both via your favorite package manager\nor manually:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"curl -sL install-node.now.sh/lts | sh\ncurl --compressed -o- -L https://yarnpkg.com/install.sh | bash\n")),(0,i.kt)("h2",{id:"installing-cocnvim"},"Installing coc.nvim"),(0,i.kt)("p",null,"Once the requirements are satisfied, we can now proceed to install\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/neoclide/coc.nvim/"},(0,i.kt)("inlineCode",{parentName:"a"},"neoclide/coc.nvim")),", which provides\nLanguage Server Protocol support to Vim/Nvim  to communicate with the Metals\nlanguage server."),(0,i.kt)("p",null,"Assuming ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/junegunn/vim-plug"},(0,i.kt)("inlineCode",{parentName:"a"},"vim-plug"))," is used (another\nplugin manager like vundle works too, but requires slightly different configuration), update your ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.vimrc")," (or, in case of Neovim, ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.config/nvim/init.vim"),") to include the\nfollowing settings."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vim"},"Plug 'neoclide/coc.nvim', {'branch': 'release'}\n")),(0,i.kt)("p",null,"Run ",(0,i.kt)("inlineCode",{parentName:"p"},":PlugInstall")," to install the plugin. If you already have ",(0,i.kt)("inlineCode",{parentName:"p"},"coc.nvim"),"\ninstalled, be sure to update to the latest version with ",(0,i.kt)("inlineCode",{parentName:"p"},":PlugUpdate"),"."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"coc.nvim")," uses ",(0,i.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/docs/languages/json"},"jsonc")," as a\nconfiguration file format. It's basically json with comment support."),(0,i.kt)("p",null,"In order to get comment highlighting, please add:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vim"},"autocmd FileType json syntax match Comment +\\/\\/.\\+$+\n")),(0,i.kt)("h3",{id:"recommended-cocnvim-mappings"},"Recommended coc.nvim mappings"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"coc.nvim")," doesn't come with a default key mapping for LSP commands, so you need\nto configure it yourself. You can see an example of default mappings\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/neoclide/coc.nvim#example-vim-configuration"},"here"),". Below\nyou'll find examples of additional ",(0,i.kt)("inlineCode",{parentName:"p"},"coc-metals")," specific mappings that you'll\nalso want to ensure you have:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vim"},"\" Help Vim recognize *.sbt and *.sc as Scala files\nau BufRead,BufNewFile *.sbt,*.sc set filetype=scala\n\n\" Used to expand decorations in worksheets\nnmap <Leader>ws <Plug>(coc-metals-expand-decoration)\n\n\" Toggle panel with Tree Views\nnnoremap <silent> <space>t :<C-u>CocCommand metals.tvp<CR>\n\" Toggle Tree View 'metalsPackages'\nnnoremap <silent> <space>tp :<C-u>CocCommand metals.tvp metalsPackages<CR>\n\" Toggle Tree View 'metalsCompile'\nnnoremap <silent> <space>tc :<C-u>CocCommand metals.tvp metalsCompile<CR>\n\" Toggle Tree View 'metalsBuild'\nnnoremap <silent> <space>tb :<C-u>CocCommand metals.tvp metalsBuild<CR>\n\" Reveal current current class (trait or object) in Tree View 'metalsPackages'\nnnoremap <silent> <space>tf :<C-u>CocCommand metals.revealInTreeView metalsPackages<CR>\n")),(0,i.kt)("h3",{id:"installing-coc-metals"},"Installing coc-metals"),(0,i.kt)("p",null,"Once you have ",(0,i.kt)("inlineCode",{parentName:"p"},"coc.nvim")," installed, you can then install Metals a few different\nways. The easiest is by running:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vim"},":CocInstall coc-metals\n")),(0,i.kt)("p",null,"If you are using the latest stable release of coc.nvim, then this will\nautomatically check for updates each day. However, if you're on the master\nbranch of coc.nvim, this will no longer happen by default. You can read more\nabout this ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/neoclide/coc.nvim/issues/1937"},"here"),"."),(0,i.kt)("p",null,"If you'd like to use the latest changes on master, you can also just build from\nsource by using your vim plugin manager. Here is an example using ",(0,i.kt)("inlineCode",{parentName:"p"},"vim-plug"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vim"},"Plug 'scalameta/coc-metals', {'do': 'yarn install --frozen-lockfile'}\n")),(0,i.kt)("p",null,"Then, issue a ",(0,i.kt)("inlineCode",{parentName:"p"},":PlugInstall")," to install the extension, and regularly a\n",(0,i.kt)("inlineCode",{parentName:"p"},":PlugUpdate")," to update it and pull in the latest changes."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"NOTE*")," Make sure you don't have the extension installed both ways. So if you\nhave installed it with the built-in extension management of coc.nvim first and\nare not switching, make sure to uninstall the old version first."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vim"},":CocUninstall coc-metals\n")),(0,i.kt)("h2",{id:"importing-a-build"},"Importing a build"),(0,i.kt)("p",null,'The first time you open Metals in a new workspace it prompts you to import the build.\nClick "Import build" to start the installation step.'),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/1EyQPTC.png",alt:"Import build"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'"Not now" disables this prompt for 2 minutes.'),(0,i.kt)("li",{parentName:"ul"},'"Don\'t show again" disables this prompt forever, use ',(0,i.kt)("inlineCode",{parentName:"li"},"rm -rf .metals/")," to re-enable\nthe prompt."),(0,i.kt)("li",{parentName:"ul"},"Use ",(0,i.kt)("inlineCode",{parentName:"li"},"tail -f .metals/metals.log")," to watch the build import progress."),(0,i.kt)("li",{parentName:"ul"},"Behind the scenes, Metals uses ",(0,i.kt)("a",{parentName:"li",href:"https://scalacenter.github.io/bloop/"},"Bloop")," to\nimport sbt builds, but you don't need Bloop installed on your machine to run this step.")),(0,i.kt)("p",null,"Once the import step completes, compilation starts for your open ",(0,i.kt)("inlineCode",{parentName:"p"},"*.scala"),"\nfiles."),(0,i.kt)("p",null,"Once the sources have compiled successfully, you can navigate the codebase with\ngoto definition."),(0,i.kt)("h3",{id:"custom-sbt-launcher"},"Custom sbt launcher"),(0,i.kt)("p",null,"By default, Metals runs an embedded ",(0,i.kt)("inlineCode",{parentName:"p"},"sbt-launch.jar")," launcher that respects ",(0,i.kt)("inlineCode",{parentName:"p"},".sbtopts")," and ",(0,i.kt)("inlineCode",{parentName:"p"},".jvmopts"),".\nHowever, the environment variables ",(0,i.kt)("inlineCode",{parentName:"p"},"SBT_OPTS")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"JAVA_OPTS")," are not respected."),(0,i.kt)("p",null,"Update the ",(0,i.kt)("inlineCode",{parentName:"p"},"metals.sbtScript")," setting to use a custom ",(0,i.kt)("inlineCode",{parentName:"p"},"sbt")," script instead of the\ndefault Metals launcher if you need further customizations like reading environment\nvariables."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/meciPTg.png",alt:"Sbt Launcher"})),(0,i.kt)("h3",{id:"speeding-up-import"},"Speeding up import"),(0,i.kt)("p",null,'The "Import build" step can take a long time, especially the first time you\nrun it in a new build. The exact time depends on the complexity of the build and\nif library dependencies need to be downloaded. For example, this step can take\neverything from 10 seconds in small cached builds up to 10-15 minutes in large\nuncached builds.'),(0,i.kt)("p",null,"Consult the ",(0,i.kt)("a",{parentName:"p",href:"https://scalacenter.github.io/bloop/docs/build-tools/sbt#speeding-up-build-export"},"Bloop documentation"),"\nto learn how to speed up build import."),(0,i.kt)("h3",{id:"importing-changes"},"Importing changes"),(0,i.kt)("p",null,"When you change ",(0,i.kt)("inlineCode",{parentName:"p"},"build.sbt")," or sources under ",(0,i.kt)("inlineCode",{parentName:"p"},"project/"),", you will be prompted to\nre-import the build."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/iocTVb6.png",alt:"Import sbt changes"})),(0,i.kt)("h2",{id:"configure-java-version"},"Configure Java version"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"coc-metals")," extension uses by default the ",(0,i.kt)("inlineCode",{parentName:"p"},"JAVA_HOME")," environment variable\n(via ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/find-java-home"},(0,i.kt)("inlineCode",{parentName:"a"},"find-java-home")),") to locate\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"java")," executable."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/clDfPMk.png",alt:"No Java Home"})),(0,i.kt)("p",null,"If no ",(0,i.kt)("inlineCode",{parentName:"p"},"JAVA_HOME")," is detected you can then Open Settings by following the\ninstructions or do it at a later time by using ",(0,i.kt)("inlineCode",{parentName:"p"},":CocConfig")," or ",(0,i.kt)("inlineCode",{parentName:"p"},":CocConfigLocal"),"\nwhich will open up your configuration where you can manually enter your\nJAVA_HOME location."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/wK07Vju.png",alt:"Enter Java Home"})),(0,i.kt)("h2",{id:"using-latest-metals-snapshot"},"Using latest Metals SNAPSHOT"),(0,i.kt)("p",null,'Update the "Server Version" setting to try out the latest pending Metals\nfeatures.'),(0,i.kt)("table",null,(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Version"),(0,i.kt)("th",null,"Published"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,"0.11.2"),(0,i.kt)("td",null,"08 Mar 2022 13:30")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"0.11.3+3-ccd6e687-SNAPSHOT"),(0,i.kt)("td",null,"27 Apr 2022 07:28")))),"After updating the version, you'll be triggered to reload the window. This will be necessary before the new version will be downloaded and used.",(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/VUCdQvi.png",alt:"Update Metals Version"})),(0,i.kt)("h2",{id:"list-all-workspace-compile-errors"},"List all workspace compile errors"),(0,i.kt)("p",null,"To list all compilation errors and warnings in the workspace, run the following\ncommand."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vim"},":CocList diagnostics\n")),(0,i.kt)("p",null,"Or use the default recommended mapping ",(0,i.kt)("inlineCode",{parentName:"p"},"<space> a"),"."),(0,i.kt)("p",null,"This is helpful to see compilation errors in different files from your current\nopen buffer."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/cer22HW.png",alt:"Diagnostics"})),(0,i.kt)("h2",{id:"worksheets"},"Worksheets"),(0,i.kt)("p",null,"Worksheets are a great way to explore an api, try out an idea, or code\nup an example and quickly see the evaluated expression or result. Behind\nthe scenes worksheets are powered by the great work done in\n",(0,i.kt)("a",{parentName:"p",href:"https://scalameta.org/mdoc/"},"mdoc"),"."),(0,i.kt)("h3",{id:"getting-started-with-worksheets"},"Getting started with Worksheets"),(0,i.kt)("p",null,"To get started with a worksheet you can either use the ",(0,i.kt)("inlineCode",{parentName:"p"},"metals.new-scala-file"),"\ncommand and select ",(0,i.kt)("em",{parentName:"p"},"Worksheet")," or create a file called ",(0,i.kt)("inlineCode",{parentName:"p"},"*.worksheet.sc"),".\nThis format is important since this is what tells Metals that it's meant to be\ntreated as a worksheet and not just a Scala script. Where you create the\nscript also matters. If you'd like to use classes and values from your\nproject, you need to make sure the worksheet is created inside of your ",(0,i.kt)("inlineCode",{parentName:"p"},"src"),"\ndirectory. You can still create a worksheet in other places, but you will\nonly have access to the standard library and your dependencies."),(0,i.kt)("h3",{id:"evaluations"},"Evaluations"),(0,i.kt)("p",null,"After saving you'll see the result of the expression differently depending on whether you are using Neovim or Vim. If\nusing Vim, you will see them appear as comments at the end of\nthe line. If you're using Nvim you will see this as virtual text.\nKeep in mind that if you're using coc-metals with Nvim you'll need\nto make sure ",(0,i.kt)("inlineCode",{parentName:"p"},"codeLens.enable")," is set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),".\nYou may not see the full result for example if it's too long, so you are also\nable to hover on the comment if you're in Vim or expand the virtual text by\nusing the ",(0,i.kt)("inlineCode",{parentName:"p"},"coc-metals-expand-decoration")," command. The default for this\nis:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vim"},"nmap <Leader>ws <Plug>(coc-metals-expand-decoration)\n")),(0,i.kt)("p",null,"Keep in mind that you don't need to wrap your code in an ",(0,i.kt)("inlineCode",{parentName:"p"},"object"),". In worksheets\neverything can be evaluated at the top level."),(0,i.kt)("h3",{id:"using-dependencies-in-worksheets"},"Using dependencies in worksheets"),(0,i.kt)("p",null,"You are able to include an external dependency in your worksheet by including\nit in one of the following two ways."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},"// $dep.`organisation`::artifact:version` style\nimport $dep.`com.lihaoyi::scalatags:0.7.0`\n\n// $ivy.`organisation::artifact:version` style\nimport $ivy.`com.lihaoyi::scalatags:0.7.0`\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"::")," is the same as ",(0,i.kt)("inlineCode",{parentName:"p"},"%%")," in sbt, which will append the current Scala binary version\nto the artifact name."),(0,i.kt)("p",null,"You can also import ",(0,i.kt)("inlineCode",{parentName:"p"},"scalac")," options in a special ",(0,i.kt)("inlineCode",{parentName:"p"},"$scalac")," import like below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},"import $scalac.`-Ywarn-unused`\n")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/Bt6DMtH.png",alt:"Decorations with worksheets"})),(0,i.kt)("h2",{id:"tree-view-protocol"},"Tree View Protocol"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/GvcU9Mu.gif",alt:"Tree View Protocol"})),(0,i.kt)("p",null,"coc-metals has a built-in implementation of the ",(0,i.kt)("a",{parentName:"p",href:"https://scalameta.org/metals/docs/integrations/tree-view-protocol.html"},"Tree View\nProtocol"),".\nIf you have the ",(0,i.kt)("a",{parentName:"p",href:"/metals/docs/editors/vim#recommended-cocnvim-mappings"},"recommended mappings")," copied, you'll notice\nthat in the bottom you'll have some TVP related settings. You can start by\nopening the TVP panel by using the default ",(0,i.kt)("inlineCode",{parentName:"p"},"<space> t"),". Once open, you'll see\nthere are three parts to the panel. The first being the ",(0,i.kt)("inlineCode",{parentName:"p"},"MetalsCompile")," window\nwhere you can see ongoing compilations, the second is the ",(0,i.kt)("inlineCode",{parentName:"p"},"MetalsPackages"),"\nwindow where you are able to see a tree view of all your packages, and finally\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"metalsBuild")," window where you have build related commands."),(0,i.kt)("p",null,"You are able to trigger the commands while being on top of the option you are\nattempting to trigger and pressing ",(0,i.kt)("inlineCode",{parentName:"p"},"r"),". You can change this default in the\nsettings. You can find all the relevant TVP settings below in the ",(0,i.kt)("a",{parentName:"p",href:"#tree-view-protocol-configuration-options"},"Available\nConfiguration Options"),"."),(0,i.kt)("h3",{id:"tree-view-protocol-configuration-options"},"Tree View Protocol configuration options"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Configuration Option"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"metals.treeviews.toggleNode")),(0,i.kt)("td",{parentName:"tr",align:null},"Expand / Collapse tree node (default ",(0,i.kt)("inlineCode",{parentName:"td"},"<CR>"),")")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"metals.treeviews.initialWidth")),(0,i.kt)("td",{parentName:"tr",align:null},"Initial Tree Views panels (default ",(0,i.kt)("inlineCode",{parentName:"td"},"40"),")")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"metals.treeviews.initialViews")),(0,i.kt)("td",{parentName:"tr",align:null},"Initial views that the Tree View Panel displays. Don't mess with this unless you know what you're doing.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"metals.treeviews.gotoLastChild")),(0,i.kt)("td",{parentName:"tr",align:null},"Go to the last child Node (default ",(0,i.kt)("inlineCode",{parentName:"td"},"J"),")")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"metals.treeviews.gotoParentNode")),(0,i.kt)("td",{parentName:"tr",align:null},"Go to parent Node (default ",(0,i.kt)("inlineCode",{parentName:"td"},"p"),")")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"metals.treeviews.gotoFirstChild")),(0,i.kt)("td",{parentName:"tr",align:null},"Go to first child Node (default ",(0,i.kt)("inlineCode",{parentName:"td"},"K"),")")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"metals.treeviews.executeCommand")),(0,i.kt)("td",{parentName:"tr",align:null},"Execute command for node (default ",(0,i.kt)("inlineCode",{parentName:"td"},"r"),")")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"metals.treeviews.gotoPrevSibling")),(0,i.kt)("td",{parentName:"tr",align:null},"Go to prev sibling (default ",(0,i.kt)("inlineCode",{parentName:"td"},"<C-k>"),")")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"metals.treeviews.gotoNextSibling")),(0,i.kt)("td",{parentName:"tr",align:null},"Go to next sibling (default ",(0,i.kt)("inlineCode",{parentName:"td"},"<C-j>"),")")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"metals.treeviews.forceChildrenReload")),(0,i.kt)("td",{parentName:"tr",align:null},"Force the reloading of the children of this node. May be useful when the wrong result is cached and tree contains invalid data. (default ",(0,i.kt)("inlineCode",{parentName:"td"},"f"),")")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"metals.treeviews.executeCommandAndOpenTab")),(0,i.kt)("td",{parentName:"tr",align:null},"Execute command and open node under cursor in tab (if node is class, trait and so on) (default ",(0,i.kt)("inlineCode",{parentName:"td"},"t"),")")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"metals.treeviews.executeCommandAndOpenSplit")),(0,i.kt)("td",{parentName:"tr",align:null},"Execute command and open node under cursor in horizontal split (if node is class, trait and so on) (default ",(0,i.kt)("inlineCode",{parentName:"td"},"s"),")")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"metals.treeviews.executeCommandAndOpenVSplit")),(0,i.kt)("td",{parentName:"tr",align:null},"Execute command and open node under cursor in vertical split (if node is class, trait and so on) (default ",(0,i.kt)("inlineCode",{parentName:"td"},"v"),")")))),(0,i.kt)("h2",{id:"goto-super-method"},"Goto Super Method"),(0,i.kt)("p",null,"Depending on whether you're using Vim or Neovim, you'll have a slightly\ndifferent behavior with this feature. If you're using Neovim, you'll want to\nensure that you have ",(0,i.kt)("inlineCode",{parentName:"p"},"codeLens.enable")," set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," in your ",(0,i.kt)("inlineCode",{parentName:"p"},":CocConfig")," since\nyou'll be able to quickly see via code lenses which members are overridden.\nThen, you'll be able to simply trigger a code lens action on the line of the\nmember that is overridden. The default mapping for this is ",(0,i.kt)("inlineCode",{parentName:"p"},"<leader> cl"),"."),(0,i.kt)("p",null,"If you're using Vim, you'll still have access to this functionality, but you'll\nhave to infer which members are overridden and utilize the\n",(0,i.kt)("inlineCode",{parentName:"p"},"metals.go-to-super-method")," command."),(0,i.kt)("p",null,"There is also a ",(0,i.kt)("inlineCode",{parentName:"p"},"metals.super-method-hierarchy")," command which will show you the\nentire hierarchy of the overridden method."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/TkjolXq.png",alt:"Goto super method"})),(0,i.kt)("p",null,"If you don't utilize this feature you can disable it by setting\n",(0,i.kt)("inlineCode",{parentName:"p"},"metals.superMethodLensesEnabled")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,i.kt)("h2",{id:"run-doctor"},"Run doctor"),(0,i.kt)("p",null,"To troubleshoot problems with your build workspace, open your coc commands by either\nusing ",(0,i.kt)("inlineCode",{parentName:"p"},":CocCommand")," or the recommend mapping ",(0,i.kt)("inlineCode",{parentName:"p"},"<space> c"),". This will open your command\nwindow allowing you to search for ",(0,i.kt)("inlineCode",{parentName:"p"},"metals.doctor-run")," command."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/QaqhxF7.png",alt:"Run Doctor Command"})),(0,i.kt)("p",null,"This command opens an embedded doctor in your preview window. If you're not familiar with\nhaving multiple windows, you can use ",(0,i.kt)("inlineCode",{parentName:"p"},"<C-w> + w")," to jump into it."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/McaAFv5.png",alt:"Embedded Doctor"})),(0,i.kt)("h2",{id:"other-available-commands"},"Other Available Commands"),(0,i.kt)("p",null,"You can see a full list of the Metals server commands\n",(0,i.kt)("a",{parentName:"p",href:"https://scalameta.org/metals/docs/integrations/new-editor#metals-server-commands"},"here"),"."),(0,i.kt)("h2",{id:"show-document-symbols"},"Show document symbols"),(0,i.kt)("p",null,"Run ",(0,i.kt)("inlineCode",{parentName:"p"},":CocList outline")," to show a symbol outline for the current file or use the\ndefault mapping ",(0,i.kt)("inlineCode",{parentName:"p"},"<space> o"),"."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/gEhAXV4.png",alt:"Document Symbols"})),(0,i.kt)("h2",{id:"available-configuration-options"},"Available Configuration Options"),(0,i.kt)("p",null,"The following configuration options are currently available. The easiest way to\nset these configurations is to enter ",(0,i.kt)("inlineCode",{parentName:"p"},":CocConfig")," or ",(0,i.kt)("inlineCode",{parentName:"p"},":CocLocalConfig")," to set\nyour global or local configuration settings respectively.\nIf you'd like to get autocompletion help for the configuration values you can\ninstall ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/neoclide/coc-json"},"coc-json"),"."),(0,i.kt)("h3",{id:"java-home-directory"},"Java Home directory"),(0,i.kt)("p",null,"The Java Home directory used for indexing JDK sources and locating the ",(0,i.kt)("inlineCode",{parentName:"p"},"java")," binary."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"JAVA_HOME")," environment variable with fallback to ",(0,i.kt)("inlineCode",{parentName:"p"},"user.home")," system property."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "javaHome": "/Library/Java/JavaVirtualMachines/jdk1.8.0_192.jdk/Contents/Home"\n  }\n}\n')),(0,i.kt)("h3",{id:"sbt-script"},"sbt script"),(0,i.kt)("p",null,"Optional absolute path to an ",(0,i.kt)("inlineCode",{parentName:"p"},"sbt")," executable to use for running ",(0,i.kt)("inlineCode",{parentName:"p"},"sbt bloopInstall"),".\nBy default, Metals uses ",(0,i.kt)("inlineCode",{parentName:"p"},"java -jar sbt-launch.jar")," with an embedded launcher while respecting\n",(0,i.kt)("inlineCode",{parentName:"p"},".jvmopts")," and ",(0,i.kt)("inlineCode",{parentName:"p"},".sbtopts"),". Update this setting if your ",(0,i.kt)("inlineCode",{parentName:"p"},"sbt")," script requires more customizations\nlike using environment variables."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": empty string ",(0,i.kt)("inlineCode",{parentName:"p"},'""'),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "sbtScript": "/usr/local/bin/sbt"\n  }\n}\n')),(0,i.kt)("h3",{id:"gradle-script"},"Gradle script"),(0,i.kt)("p",null,"Optional absolute path to a ",(0,i.kt)("inlineCode",{parentName:"p"},"gradle")," executable to use for running ",(0,i.kt)("inlineCode",{parentName:"p"},"gradle bloopInstall"),".\nBy default, Metals uses gradlew with 5.3.1 gradle version. Update this setting if your ",(0,i.kt)("inlineCode",{parentName:"p"},"gradle")," script requires more customizations\nlike using environment variables."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": empty string ",(0,i.kt)("inlineCode",{parentName:"p"},'""'),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "gradleScript": "/usr/local/bin/gradle"\n  }\n}\n')),(0,i.kt)("h3",{id:"maven-script"},"Maven script"),(0,i.kt)("p",null,"Optional absolute path to a ",(0,i.kt)("inlineCode",{parentName:"p"},"maven")," executable to use for generating bloop config.\nBy default, Metals uses mvnw maven wrapper with 3.6.1 maven version. Update this setting if your ",(0,i.kt)("inlineCode",{parentName:"p"},"maven")," script requires more customizations"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": empty string ",(0,i.kt)("inlineCode",{parentName:"p"},'""'),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "mavenScript": "/usr/local/bin/mvn"\n  }\n}\n')),(0,i.kt)("h3",{id:"mill-script"},"Mill script"),(0,i.kt)("p",null,"Optional absolute path to a ",(0,i.kt)("inlineCode",{parentName:"p"},"mill")," executable to use for running ",(0,i.kt)("inlineCode",{parentName:"p"},"mill mill.contrib.Bloop/install"),".\nBy default, Metals uses mill wrapper script with 0.5.0 mill version. Update this setting if your ",(0,i.kt)("inlineCode",{parentName:"p"},"mill")," script requires more customizations\nlike using environment variables."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": empty string ",(0,i.kt)("inlineCode",{parentName:"p"},'""'),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "millScript": "/usr/local/bin/mill"\n  }\n}\n')),(0,i.kt)("h3",{id:"scalafmt-config-path"},"Scalafmt config path"),(0,i.kt)("p",null,"Optional custom path to the .scalafmt.conf file.\nShould be an absolute path and use forward slashes ",(0,i.kt)("inlineCode",{parentName:"p"},"/")," for file separators (even on Windows)."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": empty string ",(0,i.kt)("inlineCode",{parentName:"p"},'""'),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "scalafmtConfigPath": "project/.scalafmt.conf"\n  }\n}\n')),(0,i.kt)("h3",{id:"scalafix-config-path"},"Scalafix config path"),(0,i.kt)("p",null,"Optional custom path to the .scalafix.conf file.\nShould be an absolute path and use forward slashes ",(0,i.kt)("inlineCode",{parentName:"p"},"/")," for file separators (even on Windows)."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": empty string ",(0,i.kt)("inlineCode",{parentName:"p"},'""'),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "scalafixConfigPath": "project/.scalafix.conf"\n  }\n}\n')),(0,i.kt)("h3",{id:"ammonite-jvm-properties"},"Ammonite JVM Properties"),(0,i.kt)("p",null,"Optional list of JVM properties to pass along to the Ammonite server.\nEach property needs to be a separate item.\\n\\nExample: ",(0,i.kt)("inlineCode",{parentName:"p"},"-Xmx1G")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"-Xms100M"),'"'),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"[]"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "ammoniteJvmProperties": ["-Xmx1G"]\n  }\n}\n')),(0,i.kt)("h3",{id:"excluded-packages"},"Excluded Packages"),(0,i.kt)("p",null,"Packages that will be excluded from completions, imports, and symbol searches."),(0,i.kt)("p",null,"Note that this is in addition to some default packages that are already excluded.\nThe default excluded packages are listed below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"META-INF\nimages\ntoolbarButtonGraphics\njdk\nsun\noracle\njava.awt.desktop\norg.jcp\norg.omg\norg.graalvm\ncom.oracle\ncom.sun\ncom.apple\napple\ncom.sourcegraph.shaded\n")),(0,i.kt)("p",null,"If there is a need to remove one of the defaults, you are able to do so by including the\npackage in your list and prepending ",(0,i.kt)("inlineCode",{parentName:"p"},"--")," to it."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'["--sun"]\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"[]"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "excludedPackages": ["akka.actor.typed.javadsl"]\n  }\n}\n')),(0,i.kt)("h3",{id:"dont-generate-bloop-plugin-file-for-sbt"},"Don't generate Bloop plugin file for sbt"),(0,i.kt)("p",null,"If true, Metals will not generate ",(0,i.kt)("inlineCode",{parentName:"p"},"metals.sbt")," files under the assumption that sbt-bloop is already manually installed in the sbt build. Build import will fail with a 'not valid command bloopInstall' error in case Bloop is not manually installed in the build when using this option."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": false"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "bloopSbtAlreadyInstalled": false\n  }\n}\n')),(0,i.kt)("h3",{id:"version-of-bloop"},"Version of Bloop"),(0,i.kt)("p",null,"This version will be used for the Bloop build tool plugin, for any supported build tool,\nwhile importing in Metals as well as for running the embedded server"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": 1.5.0"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "bloopVersion": "1.4.0-RC1"\n  }\n}\n')),(0,i.kt)("h3",{id:"bloop-jvm-properties"},"Bloop JVM Properties"),(0,i.kt)("p",null,"Optional list of JVM properties to pass along to the Bloop server.\nPlease follow this guide for the format ",(0,i.kt)("a",{parentName:"p",href:"https://scalacenter.github.io/bloop/docs/server-reference#global-settings-for-the-server%22"},'https://scalacenter.github.io/bloop/docs/server-reference#global-settings-for-the-server"')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": ",'["-Xmx1G"]',"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "bloopJvmProperties": ["-Xmx1G"]\n  }\n}\n')),(0,i.kt)("h3",{id:"should-display-lenses-with-links-to-super-methods"},"Should display lenses with links to super methods"),(0,i.kt)("p",null,"Super method lenses are visible above methods definition that override another methods. Clicking on a lens jumps to super method definition.\nDisabled lenses are not calculated for opened documents which might speed up document processing."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": false"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "superMethodLensesEnabled": false\n  }\n}\n')),(0,i.kt)("h3",{id:"should-display-type-annotations-for-inferred-types"},"Should display type annotations for inferred types"),(0,i.kt)("p",null,"When this option is enabled, each method that can have inferred types has them\ndisplayed either as additional decorations if they are supported by the editor or\nshown in the hover."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": false"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "showInferredType": false\n  }\n}\n')),(0,i.kt)("h3",{id:"should-display-implicit-parameter-at-usage-sites"},"Should display implicit parameter at usage sites"),(0,i.kt)("p",null,"When this option is enabled, each method that has implicit arguments has them\ndisplayed either as additional decorations if they are supported by the editor or\nshown in the hover."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": false"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "showImplicitArguments": false\n  }\n}\n')),(0,i.kt)("h3",{id:"should-display-implicit-conversion-at-usage-sites"},"Should display implicit conversion at usage sites"),(0,i.kt)("p",null,"When this option is enabled, each place where an implicit method or class is used has it\ndisplayed either as additional decorations if they are supported by the editor or\nshown in the hover."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": false"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "showImplicitConversionsAndClasses": false\n  }\n}\n')),(0,i.kt)("h3",{id:"should-try-adjust-indentation-on-range-formatting"},"Should try adjust indentation on range formatting."),(0,i.kt)("p",null,"When this option is enabled, when user pastes any snippet into a Scala file, Metals\nwill try to adjust the indentation to that of the current cursor."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": false"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "enableIndentOnPaste": false\n  }\n}\n')),(0,i.kt)("h3",{id:"remote-language-server"},"Remote language server"),(0,i.kt)("p",null,"A URL pointing to an endpoint that implements a remote language server."),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"https://scalameta.org/metals/docs/contributors/remote-language-server.html"},"https://scalameta.org/metals/docs/contributors/remote-language-server.html")," for\ndocumentation on remote language servers."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": empty string ",(0,i.kt)("inlineCode",{parentName:"p"},'""'),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "remoteLanguageServer": "https://language-server.company.com/message"\n  }\n}\n')),(0,i.kt)("h3",{id:"default-fallback-scala-version"},"Default fallback Scala version"),(0,i.kt)("p",null,"The Scala compiler version that is used as the default or fallback in case a file\ndoesn't belong to any build target or the specified Scala version isn't supported by Metals.\nThis applies to standalone Scala files, worksheets, and Ammonite scripts."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": 3.1.2"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "fallbackScalaVersion": 3.1.2\n  }\n}\n')),(0,i.kt)("h3",{id:"test-ui-used-for-tests-and-test-suites"},"Test UI used for tests and test suites"),(0,i.kt)("p",null,"Default way of handling tests and test suites."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": Code Lenses"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "testUserInterface": test explorer\n  }\n}\n')),(0,i.kt)("h3",{id:"eclipse-java-formatter-config-path"},"Eclipse Java formatter config path"),(0,i.kt)("p",null,"Optional custom path to the eclipse-formatter.xml file.\nShould be an absolute path and use forward slashes ",(0,i.kt)("inlineCode",{parentName:"p"},"/")," for file separators (even on Windows)."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": empty string ",(0,i.kt)("inlineCode",{parentName:"p"},'""'),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "javaFormat.eclipseConfigPath": "formatters/eclipse-formatter.xml"\n  }\n}\n')),(0,i.kt)("h3",{id:"eclipse-java-formatting-profile"},"Eclipse Java formatting profile"),(0,i.kt)("p",null,"If the Eclipse formatter file contains more than one profile then specify the required profile name."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Default"),": empty string ",(0,i.kt)("inlineCode",{parentName:"p"},'""'),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metals": {\n    "javaFormat.eclipseProfile": "GoogleStyle"\n  }\n}\n')),(0,i.kt)("h2",{id:"create-new-project-from-template"},"Create new project from template"),(0,i.kt)("p",null,"It is possible using Metals to easily setup a new project using the exiting ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/foundweekends/giter8/wiki/giter8-templates"},"giter8")," templates.\nThis is an equivalent to the ",(0,i.kt)("inlineCode",{parentName:"p"},"sbt new")," command, which uses the same mechanism.\nThere is a great number of templates already available and it should be easy to find something for yourself.\nTo start the setup you can use the new-scala-project command, which works as following:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Choose the template and then:",(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"Use the proposed templates."),(0,i.kt)("li",{parentName:"ol"},'Choose "Discover more" and then choose from the list downloaded from the Giter8 wiki page.'),(0,i.kt)("li",{parentName:"ol"},"Input a custom Github repository following the ",(0,i.kt)("inlineCode",{parentName:"li"},"organization/repo")," schema."))),(0,i.kt)("li",{parentName:"ol"},"Navigate to the parent directory that you want to create your new project in."),(0,i.kt)("li",{parentName:"ol"},"Choose the name or accept the default one.")),(0,i.kt)("p",null,"If you feel like a template should be included in the default displayed ones do not hesitate to create a\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/scalameta/metals/blob/cda5b8c2029e5f201fb8d0636e0365d796407bd9/metals/src/main/scala/scala/meta/internal/builds/NewProjectProvider.scala#L308"},"PR"),"\nor file an issue."),(0,i.kt)("h2",{id:"enable-on-type-formatting-for-multiline-string-formatting"},"Enable on type formatting for multiline string formatting"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/astTOKu.gif",alt:"on-type"})),(0,i.kt)("p",null,"To properly support some of the multiline string options like adding ",(0,i.kt)("inlineCode",{parentName:"p"},"|")," in\nthe multiline string, we are using the ",(0,i.kt)("inlineCode",{parentName:"p"},"onTypeFormatting")," method. To enable the\nfunctionality you need to enable ",(0,i.kt)("inlineCode",{parentName:"p"},"coc.preferences.formatOnType")," setting."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/RWPHt2q.png",alt:"coc-preferences-formatOnType"})),(0,i.kt)("h2",{id:"close-buffer-without-exiting"},"Close buffer without exiting"),(0,i.kt)("p",null,"To close a buffer and return to the previous buffer, run the following command."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vim"},":bd\n")),(0,i.kt)("p",null,"This command is helpful when navigating in library dependency sources in the .metals/readonly directory."),(0,i.kt)("h2",{id:"shut-down-the-language-server"},"Shut down the language server"),(0,i.kt)("p",null,"The Metals server is shutdown when you exit vim as usual."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vim"},":wq\n")),(0,i.kt)("h2",{id:"statusline-integration"},"Statusline integration"),(0,i.kt)("p",null,"It's recommended to use a statusline integration with ",(0,i.kt)("inlineCode",{parentName:"p"},"coc-metals")," in order to\nallow messages to be displayed in your status line rather than as a message.\nThis will allow for a better experience as you can continue to get status\ninformation while entering a command or responding to a prompt. However, we\nrealize that not everyone by default will have this setup, and since the user\nneeds to see messages about the status of their build, the following is\ndefaulted to false."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'"metals.statusBarEnabled": true\n')),(0,i.kt)("p",null,"Again, it's recommended to make this active, and use a statusline plugin, or\nmanually add the coc status information into your statusline. ",(0,i.kt)("inlineCode",{parentName:"p"},"coc.nvim")," has\nmultiple ways to integrate with various statusline plugins. You can find\ninstructions for each of them located\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/neoclide/coc.nvim/wiki/Statusline-integration"},"here"),".  If\nyou're unsure of what to use,\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/vim-airline/vim-airline"},"vim-airline")," is a great minimal\nchoice that will work out of the box."),(0,i.kt)("p",null,"With ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/vim-airline/vim-airline"},"vim-airline")," you'll notice\ntwo noteworthy things. The first will be that you'll have diagnostic\ninformation on the far right of your screen."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/7uNYTYl.png",alt:"Diagnostic statusline"})),(0,i.kt)("p",null,"You'll also have metals status information in your status bar."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/eCAgrCn.png",alt:"Status bar info"})),(0,i.kt)("p",null,"Without a statusline integration, you'll get messages like you see below."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/XF7A1BJ.png",alt:"No status line"})),(0,i.kt)("p",null,"If you don't use a statusline plugin, but would still like to see this\ninformation, the easiest way is to make sure you have the following in your\n",(0,i.kt)("inlineCode",{parentName:"p"},".vimrc"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vim"},"set statusline^=%{coc#status()}%{get(b:,'coc_current_function','')}\n")),(0,i.kt)("h2",{id:"formatting-on-save"},"Formatting on save"),(0,i.kt)("p",null,"Add the following configuration to ",(0,i.kt)("inlineCode",{parentName:"p"},":CocConfig")," if you'd like to have ",(0,i.kt)("inlineCode",{parentName:"p"},":w")," format using Metals and\nScalafmt."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'"coc.preferences.formatOnSaveFiletypes": ["scala"]\n')),(0,i.kt)("p",null,"This step cleans up resources that are used by the server."),(0,i.kt)("h2",{id:"files-and-directories-to-include-in-your-gitignore"},"Files and Directories to include in your Gitignore"),(0,i.kt)("p",null,"The Metals server places logs and other files in the ",(0,i.kt)("inlineCode",{parentName:"p"},".metals")," directory. The\nBloop compile server places logs and compilation artifacts in the ",(0,i.kt)("inlineCode",{parentName:"p"},".bloop"),"\ndirectory. The Bloop plugin that generates Bloop configuration is added in the\n",(0,i.kt)("inlineCode",{parentName:"p"},"metals.sbt")," file, which is added at ",(0,i.kt)("inlineCode",{parentName:"p"},"project/metals.sbt")," as well as further\n",(0,i.kt)("inlineCode",{parentName:"p"},"project")," directories depending on how deep ",(0,i.kt)("inlineCode",{parentName:"p"},"*.sbt")," files need to be supported.\nTo support each ",(0,i.kt)("inlineCode",{parentName:"p"},"*.sbt")," file Metals needs to create an additional file at\n",(0,i.kt)("inlineCode",{parentName:"p"},"./project/project/metals.sbt")," relative to the sbt file.\nWorking with Ammonite scripts will place compiled scripts into the ",(0,i.kt)("inlineCode",{parentName:"p"},".ammonite")," directory.\nIt's recommended to exclude these directories and files\nfrom version control systems like git."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# ~/.gitignore\n.metals/\n.bloop/\n.ammonite/\nmetals.sbt\n")),(0,i.kt)("h2",{id:"using-an-alternative-lsp-client"},"Using an alternative LSP Client"),(0,i.kt)("p",null,"While we recommend using the ",(0,i.kt)("inlineCode",{parentName:"p"},"coc-metals")," extension with ",(0,i.kt)("inlineCode",{parentName:"p"},"coc.nvim"),", or\n",(0,i.kt)("inlineCode",{parentName:"p"},"nvim-metals")," with Neovim, Metals will work with these alternative LSP clients.\nKeep in mind that they have varying levels of LSP support, and you need to\nbootstrap Metals yourself."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/natebosch/vim-lsc/"},(0,i.kt)("inlineCode",{parentName:"a"},"vim-lsc")),": simple installation and written in Vimscript."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/autozimu/LanguageClient-neovim/"},(0,i.kt)("inlineCode",{parentName:"a"},"LanguageClient-neovim")),": client written in Rust."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/prabirshrestha/vim-lsp"},(0,i.kt)("inlineCode",{parentName:"a"},"vim-lsp")),": simple installation and written in\nVimscript.")),(0,i.kt)("h3",{id:"generating-metals-binary"},"Generating metals binary"),(0,i.kt)("p",null,"If you only want to use the latest stable version of Metals, the easiest way to\ninstall Metals is using ",(0,i.kt)("a",{parentName:"p",href:"https://get-coursier.io/"},"coursier"),". Once installed you\ncan simply do a ",(0,i.kt)("inlineCode",{parentName:"p"},"cs install metals")," to install the latest stable version of\nMetals. You can then also do a ",(0,i.kt)("inlineCode",{parentName:"p"},"cs update metals")," to update it."),(0,i.kt)("p",null,"If you'd like to bootstrap your own Metals for a specific version, you're also\nable to do so like this:"),(0,i.kt)("p",null,"Next, build a ",(0,i.kt)("inlineCode",{parentName:"p"},"metals-vim")," binary for the latest Metals release using the\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/coursier/coursier"},"Coursier")," command-line interface."),(0,i.kt)("table",null,(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Version"),(0,i.kt)("th",null,"Published"),(0,i.kt)("th",null,"Resolver"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,"0.11.2"),(0,i.kt)("td",null,"08 Mar 2022 13:30"),(0,i.kt)("td",null,(0,i.kt)("code",null,"-r sonatype:releases"))),(0,i.kt)("tr",null,(0,i.kt)("td",null,"0.11.3+3-ccd6e687-SNAPSHOT"),(0,i.kt)("td",null,"27 Apr 2022 07:28"),(0,i.kt)("td",null,(0,i.kt)("code",null,"-r sonatype:snapshots"))))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# Make sure to use coursier v1.1.0-M9 or newer.\ncurl -L -o coursier https://git.io/coursier-cli\nchmod +x coursier\n./coursier bootstrap \\\n  --java-opt -Xss4m \\\n  --java-opt -Xms100m \\\n  --java-opt -Dmetals.client=vim-lsc \\\n  org.scalameta:metals_2.12:0.11.2 \\\n  -r bintray:scalacenter/releases \\\n  -r sonatype:snapshots \\\n  -o /usr/local/bin/metals-vim -f\n")),(0,i.kt)("p",null,"Make sure the generated ",(0,i.kt)("inlineCode",{parentName:"p"},"metals-vim")," binary is available on your ",(0,i.kt)("inlineCode",{parentName:"p"},"$PATH"),"."),(0,i.kt)("p",null,"You can check version of your binary by executing ",(0,i.kt)("inlineCode",{parentName:"p"},"metals-vim -version"),"."),(0,i.kt)("p",null,"Configure the system properties ",(0,i.kt)("inlineCode",{parentName:"p"},"-Dhttps.proxyHost=\u2026 -Dhttps.proxyPort=\u2026"),"\nif you are behind an HTTP proxy.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"-Dmetals.client=vim-lsc")," flag is there just as a helper to match your\npotential client. So make sure it matches your client name. This line isn't\nmandatory though as your client can fully be configured via\n",(0,i.kt)("inlineCode",{parentName:"p"},"InitializationOptions"),", which should be easily configurable by your client. You\ncan read more about his\n",(0,i.kt)("a",{parentName:"p",href:"https://scalameta.org/metals/blog/2020/07/23/configuring-a-client#initializationoptions"},"here"),"."))}d.isMDXComponent=!0}}]);